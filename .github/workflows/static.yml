# Build and deploy React app to GitHub Pages
name: Build and Deploy to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build and deploy job
  build-and-deploy:
    runs-on: ubuntu-latest

    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for proper git operations
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Clear npm cache and install dependencies
        run: |
          npm cache clean --force
          rm -rf node_modules package-lock.json dist
          npm install
        
      - name: Build project
        run: |
          echo "=== Starting build process ==="
          echo "Current commit: ${{ github.sha }}"
          echo "Building project..."
          npm run build
          echo "Build completed. Checking dist directory:"
          ls -la dist/
          echo "Dist directory contents:"
          find dist/ -type f -name "*.html" -o -name "*.js" -o -name "*.css" | head -10
          echo "=== Build process completed ==="
        env:
          VITE_GITHUB_TOKEN: ${{ secrets.VITE_GITHUB_TOKEN }}
          VITE_GITHUB_OWNER: ${{ secrets.VITE_GITHUB_OWNER }}
      
      - name: Generate SEO files
        run: |
          echo "=== Generating SEO files ==="
          
          # Generate dynamic sitemap
          echo '<?xml version="1.0" encoding="UTF-8"?>' > dist/sitemap.xml
          echo '<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">' >> dist/sitemap.xml
          echo '  <url>' >> dist/sitemap.xml
          echo '    <loc>https://nikhil1479.github.io/Whatsapp-Chat-Analyser/</loc>' >> dist/sitemap.xml
          echo '    <lastmod>'$(date -u +%Y-%m-%dT%H:%M:%S+00:00)'</lastmod>' >> dist/sitemap.xml
          echo '    <changefreq>weekly</changefreq>' >> dist/sitemap.xml
          echo '    <priority>1.0</priority>' >> dist/sitemap.xml
          echo '  </url>' >> dist/sitemap.xml
          echo '</urlset>' >> dist/sitemap.xml
          
          # Create optimized robots.txt
          echo 'User-agent: *' > dist/robots.txt
          echo 'Allow: /' >> dist/robots.txt
          echo 'Disallow: /*.txt$' >> dist/robots.txt
          echo 'Disallow: /sample-chats/' >> dist/robots.txt
          echo '' >> dist/robots.txt
          echo 'Sitemap: https://nikhil1479.github.io/Whatsapp-Chat-Analyser/sitemap.xml' >> dist/robots.txt
          
          # Create .nojekyll for GitHub Pages
          touch dist/.nojekyll
          
          # Add cache headers file for better performance
          echo '_headers' > dist/_headers
          echo '/*' >> dist/_headers
          echo '  X-Frame-Options: DENY' >> dist/_headers
          echo '  X-Content-Type-Options: nosniff' >> dist/_headers
          echo '  Referrer-Policy: strict-origin-when-cross-origin' >> dist/_headers
          echo '/assets/*' >> dist/_headers
          echo '  Cache-Control: public, max-age=31536000, immutable' >> dist/_headers
          
          echo "✅ SEO files generated successfully"
        
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Verify build output
        run: |
          echo "=== Verifying build output ==="
          if [ ! -d "dist" ]; then
            echo "❌ Error: dist directory not found!"
            exit 1
          fi
          
          if [ ! -f "dist/index.html" ]; then
            echo "❌ Error: index.html not found in dist!"
            exit 1
          fi
          
          echo "✅ Build verification passed"
          echo "Files in dist:"
          find dist/ -type f | sort
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist directory created by build
          path: './dist'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4